{"version":3,"sources":["logo.svg","Components/Form.js","Components/Todo.js","Components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf8f60e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus}) =>\r\n{\r\n  //Here I can write javascript code and functions\r\n    const inputTextHandler = (e) =>\r\n    {\r\n      console.log(e.target.value);\r\n      setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) =>\r\n    {\r\n      e.preventDefault();\r\n      setTodos([...todos, {text: inputText, completed: false, id: Math.random()*1000}]);\r\n      setInputText(\"\");\r\n    }\r\n    const statusHandler = (e) =>\r\n    {\r\n      setStatus(e.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n        <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) =>\r\n{\r\n\r\n    //Events\r\n    const deleteHandler = () =>\r\n    {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }\r\n\r\n    /*\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map(item) => {\r\n                if(item.id === todo.id) {\r\n                    return{\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                }\r\n                return item;\r\n            }\r\n        )\r\n    }\r\n    */\r\n    const completeHandler = () =>\r\n    {\r\n        setTodos(todos.map(item =>\r\n        {\r\n            if(item.id === todo.id)\r\n            {\r\n                return{\r\n                    ...item,\r\n                    completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Todo;","import react from \"react\";\r\n//Import Components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) =>\r\n{\r\n    console.log(todos);\r\n\r\n    return(\r\n    \r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) =>(\r\n                    <Todo setTodos={setTodos} todos={todos} text={todo.text} todo={todo} key={todo.id} /> \r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import react, {useState, useEffect} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n//Importing Components\nimport Form from './Components/Form';\nimport TodoList from \"./Components/todoList\";\n\nfunction App() {\n  \n  //States\n  const[inputText, setInputText] = useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const[status, setStatus] = useState(\"all\");\n  const[filteredTodos, setFilteredTodos] = useState([]);\n  //RUNE ONCE WHEN APP STARTS\n\n  useEffect(()=>\n  {\n    getLocalTodos();\n  },[]);\n\n  //USE EFFECT\n  useEffect (() =>\n  {\n    filterHandler();\n    saveLocalTodos();\n\n  },[todos, status]);\n\n  //functions\n  const filterHandler = () =>\n  {\n    switch(status)\n    {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  //save to local\n  const saveLocalTodos = () =>\n  {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () =>\n  {\n    if(localStorage.getItem('todos') === null)\n    {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else\n    {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Sean's To-do List</h1>\n      </header>\n      <Form \n       inputText={inputText}\n       todos={todos} \n       setTodos={setTodos}\n       setInputText={setInputText}\n       setStatus = {setStatus}\n       \n       \n          />\n      <TodoList filteredTodos = {filteredTodos} setTodos={setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}